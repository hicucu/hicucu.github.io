{"pages":[{"title":"about","text":"Contact Github:https://github.com/hicucu Email: hicucu@gmail.com","link":"/about/index.html"}],"posts":[{"title":"box-sizing","text":"box-sizing과 box modelbox의 크기를 어떤 기준으로 계산 할 것인가? HTML은 Box로 이루어져 있으며 문서의 레이아웃을 계산 할 때 박스 모델에 따라 박스의 사이즈가 달라지게 됨 box의 크기는 어떤 요소들로 이루어 지는가? box의 크기에 영향을 주는 요소는 box의 width, height, border, padding, margin이 됨 각 요소의 값이 동일 할 때 box의 크기는 달라지는가? 123&lt;div class=\"div content\"&gt;content-box&lt;/div&gt;&lt;div class=\"div border\"&gt;border-box&lt;/div&gt;&gt; 123456789101112131415.div{ width: 100px; height: 100px; background: pink; border:10px solid black; padding: 10px; margin: 20px;}.content{ box-sizing: content-box;}.border{ box-sizing: border-box;}&gt; 다음과 같은 html과 css가 있을 때 두 div는 .div의 스타일을 적용받아 동일한 size가 됨그러나 두 div는 box-sizing이 각각 content-box와 border-box로 box-sizing의 값이 다름 그 결과 두 div는 전혀 다른 크기를 갖게 됨 왜 두 div는 다른 크기가 되었는가? 위는 content, 아래는 border의 사이즈content-box는 100x100의 사이즈에 추가적으로 10px의 padding, 10px의 border와 20px의 margin을 추가적으로 갖게 되어 총 140x140의 사이즈를 갖게 됨border-box는 100x100의 사이즈를 10px의 border와 padding이 함께 갖게 됨즉 content-box에서 height와 width는 box의 content의 크기이며 그 외 padding과 margin, border의 크기를 추가로 갖음border-box는 border까지는 크기를 함게 갖고 margin의 크기를 추가로 갖게 됨","link":"/2019/04/18/box-sizing/"},{"title":"TypeError-is-not-a-function","text":"증상 JQuery의 stop, animate 를 사용 할 때 TypeError발생TypeError: $(…).stop is not a function 원인 JQuery의 $가 다른 라이브러리에서도 함수나 변수의 이름으로 사용됨Bootstrap의 Getting started에서 JS를 추가 할 때 JQuery가 중첩되어 문제가 발생 해결 Bootstrap에서 추가한 JQuery를 제거 하면 해결 추가 jQuery.noConflict() 사용으로도 가능123456789101112131415161718var jq = jQuery.noConflict(); jq('.menu-icon.left-icon').click(function () { jq('body #wrapped').stop().animate({ \"left\": \"-0\" }, 1500);});jq('.menu-icon.right-icon').click(function () { jq('body #wrapped').stop().animate({ \"left\": \"-400px\" }, 1500);});jq('.close-icon').click(function () { jq('body #wrapped').stop().animate({ \"left\": \"-200px\" }, 1500);}); 참고 jQuery.noConflict()","link":"/2019/03/19/TypeError-is-not-a-function/"},{"title":"2019-04-02 TIL","text":"css 중요도 상속 겹침 우선순위 HTML 중요도 = box model positionfloatdisplayblock inline inline-block flex gird 상속 배치와 관련된 항목은 상속X 데코레이션 관련만 상속 / background 관련X 속성값이 inherit이면 무조건 부모 상속 em 단위는 부모에게 상속 / rem은 root에게서 상속 우선순위 e &lt; c &lt; i &lt; inline-style 선택자 [class^=”box”] = box로 시작하는 모든 class ^ : 시작 / $ 끝1234 [class^=\"box\"]{ background: pink; color: green !important;} !important 강제로 우선순위 무시 position block으로 바뀜 absolute : [display: flex]는 내용이 겹치지 않아 lineguard가 가능하지만 absolute는 가림 / 상위 부모 요소 중 가장 가까운 static이 아닌 부모요소를 기준으로 움직임 #마진병합 요소 사이의 마진의 병합, normal flow일때만 가능 Noto sans = spoqa han sans Noto : google spoqa : adobe Noto는 FF에서 정상 동작이 안되는 경우 발생 inline 이슈 12&lt;li&gt;&lt;a href=\"#\"&gt;홈&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;로그인&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;회원가입&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;사이트맵&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;english&lt;/a&gt;&lt;/li&gt;&gt; 12345678&lt;ul class=\"member\"&gt; &lt;li&gt;&lt;a href=\"#\"&gt;홈&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;로그인&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;회원가입&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;사이트맵&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;english&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&gt; inline에서 enter값이 공백으로 인식됨 의 부모인 member의 font-size를 0으로 하여 상속하고 li의 글자크기를 키우면 해결 구조선택자 http://nthmaster.com/ tabindex=0 tab으로 마크업순서 이동가능 숨김 display:none = 처음부터 없던 것 처럼 / 화면 뿐 아니라 다른 보조기구로도 인식 불가 position: absolute = 절대값으로 화면 밖으로 옮김 / 모바일 환경에서 가상커서 문제 발생 opacity: 0 = 투명도 인지가 안되는 문제 발생 할 수 있음 123456789 .readable-hidden{ position: absolute; width: 1px; height: 1px; overflow: hidden; margin: -1px; clip: rect(0 0 0 0); }&gt; https://seulbinim.github.io/WSA/float-position.html#clip-%EC%86%8D%EC%84%B1 spac out 예정 https://css-tricks.com/almanac/properties/c/clip/","link":"/2019/04/03/fc-190402/"},{"title":"codility Lesson2 OddOccurrencesInArray","text":"OddOccurrencesInArray1234567891011121314151617181920212223242526272829303132A non-empty array A consisting of N integers is given. The array contains an odd number of elements, and each element of the array can be paired with another element that has the same value, except for one element that is left unpaired.For example, in array A such that: A[0] = 9 A[1] = 3 A[2] = 9 A[3] = 3 A[4] = 9 A[5] = 7 A[6] = 9 the elements at indexes 0 and 2 have value 9, the elements at indexes 1 and 3 have value 3, the elements at indexes 4 and 6 have value 9, the element at index 5 has value 7 and is unpaired.Write a function: function solution(A);that, given an array A consisting of N integers fulfilling the above conditions, returns the value of the unpaired element.For example, given array A such that: A[0] = 9 A[1] = 3 A[2] = 9 A[3] = 3 A[4] = 9 A[5] = 7 A[6] = 9the function should return 7, as explained in the example above.Write an efficient algorithm for the following assumptions: N is an odd integer within the range [1..1,000,000]; each element of array A is an integer within the range [1..1,000,000,000]; all but one of the values in A occur an even number of times.Copyright 2009–2019 by Codility Limited. All Rights Reserved. Unauthorized copying, publication or disclosure prohibited. 방법 xor을 이용0과 어떤 수 n을 xor 연산하면 n이된다.000 xor 101의 결과는 101이다.어떤 수 n에 x를 짝수번 xor연산 할 경우 그 값은 n과 동일하다.10진수 5은 2진수로 101이고 10진수 3은 2진수로 011이다.101 xor 011의 결과는 110 이고 110 xor 011의 결과는 101이 된다.즉 0에 짝수개 만큼 존재하는 수들을 xor연산하면 그 결과는 0이 되고 짝수개가 존재하는 수들 가운데 홀수개가 존재하는 수를 xor하면 결국 홀수개가 존재하는 수의 값이 남는다.0에 7, 5, 7, 4, 5를 xor연산하면 7과 5는 두 개씩 존재하기 때문에 0이되고 하나만 존재하는 4의 값만 남는다. 코드 12345678910function solution(A) { // write your code in JavaScript (Node.js 8.9.4) var result = 0; for(var i=0; i&lt;A.length; i++){ result = result^A[i]; } return result;}&gt; 결과","link":"/2019/04/19/codility-2-1-OddOccurrencesInArray/"},{"title":"codility Lesson1 BinaryGap","text":"BinaryGap1234567891011121314151617A binary gap within a positive integer N is any maximal sequence of consecutive zeros that is surrounded by ones at both ends in the binary representation of N.For example, number 9 has binary representation 1001 and contains a binary gap of length 2. The number 529 has binary representation 1000010001 and contains two binary gaps: one of length 4 and one of length 3. The number 20 has binary representation 10100 and contains one binary gap of length 1. The number 15 has binary representation 1111 and has no binary gaps. The number 32 has binary representation 100000 and has no binary gaps.Write a function: function solution(N);that, given a positive integer N, returns the length of its longest binary gap. The function should return 0 if N doesn&apos;t contain a binary gap.For example, given N = 1041 the function should return 5, because N has binary representation 10000010001 and so its longest binary gap is of length 5. Given N = 32 the function should return 0, because N has binary representation &apos;100000&apos; and thus no binary gaps.Write an efficient algorithm for the following assumptions: N is an integer within the range [1..2,147,483,647].Copyright 2009–2019 by Codility Limited. All Rights Reserved. Unauthorized copying, publication or disclosure prohibited. 방법기본 input : 37입력된 값 N을 2진수로 변경하였을 때 1과 1 사이의 가장 많은 0의 수를 계산하는 문제로 N을 2로 나누어 떨어지는 경우는 0으로 나누어 지지 않는 경우는 1이기 때문에 나머지가 0인 경우 숫자를 카운트 10진수 37의 경우 2진수로 100101이며 2로 나눈 값은 10진수로 18과 나머지 1, 2진수로 10010과 나머지 1이 된다. 2로 나누어 지지 않는 경우 나머지는 2진수의 가장 오른쪽 1이고 이 후 2로 나누어지는 경우 2진수에서 가장 오른쪽에 다시 1이 올 때까지 0의 갯수를 카운트한다. 기본 cnt는 0이기 때문에 2진수로 1, 10, 100 등과 같이 1이 하나만 존재하는 수는 cnt의 값이 증가하지 않는다. 추가 2진수 1000100000과 같이 끝이 1로 끝나지 않는 2진수는 결국 10001만 필요하고 100000은 오른족이 1이 아니기 때문에 숫자를 카운트 할 필요가 없기 때문에 right shift연산을 한다. 2진수 2는 10이기 때문에 1000100000가 10001이 될 때까지 right shift를 하여 10001을 만든다.이 부분은 shift연산이 아닌 N/2연산을 통해 2진수 10으로 나누어도 동일한 결과를 얻을 수 있다. 추가2 부분을 나누기로 할 경우 javascript는 모든 숫자가 double형이기 때문에 N을 2로 나눈 후 소수점을 버린다. 코드 123456789101112131415161718192021222324252627function solution(N) { // write your code in JavaScript (Node.js 8.9.4) var cnt = 0; var max = -1; //추가1 while (N % 2 == 0) { N = N &gt;&gt; 1; } while (N &gt; 0) { if (N % 2 == 0) { cnt++; } else { max = Math.max(cnt, max); cnt = 0; } N = N &gt;&gt; 1; //추가2 } return max;}&gt; 결과","link":"/2019/04/17/codility-1-1-BinaryGap/"},{"title":"2019-04-04 TIL","text":"그라데이션 background-image: linear-gradient(red, green) : 위에서 아래, 레드에서 그린background-image: linear-gradient(to right, red, green)https://webgradients.com/https://leaverou.github.io/css3patterns/http://www.colorzilla.com/gradient-editor/ background 배경 다중 선언시 가장 먼저 선언 한 요소가 가장 위background: #e25d2d linear-gradient(…) 네트워크 이슈 등으로 그라데이션을 제대로 못 반영 하는 경우 앞에 속성의 값으로 색을 표시 - 콜백background: #fff url(“./images/bg_flower.png”) no-repeat;배경이미지 반복 X단축표기법은 마지막꺼만이미지 반복 off : background-repeat: no-repeat; float, position, inline-block inline-block 사용시 공백 발생float 설정시 높이를 잊어버림, 부모가 높이를 가지고 있으면 해결됨position은 offset을 주지 않으면 본래 있던 자리에 위치레이아웃은 가장 마지막에 마크업 한 요소가 가장 위로 올라옴flex는 줄바꿈을 허용하지 않음, 필요시 wrap 사용 white-space: nowrap; block에 사용block 속성의 부모에게 추가를 하여 block의 개행을 강제로 막음 http://fontello.com/ 가벼운 이미지폰트 특수문자 https://www.w3schools.com/html/html_entities.asp 애니메이션 123456&lt;div class=\"visual\"&gt; &lt;p class=\"visual-text\"&gt; Web Standards &amp;amp; Accessibility &lt;/p&gt;&lt;/div&gt;&gt; 1234567891011121314151617181920212223242526272829@keyframes textAni{ 0%{ font-size: 12px; color: rgba(0, 0, 0, 0); /* padding: 0; */ top: 0; left: 0;; } 100%{ font-size: 24px; color: rgba(0, 0, 0, 1); /* padding: 75px 0 0 400px; */ top: 75px; left: 400px; }}.visual{ height: 120px; position: relative;}/* 텍스트 에니메이션 */.visual-text{ position: absolute; background: yellow; animation-name: textAni; animation-duration: 2000ms; animation-fill-mode: forwards;}&gt; 브라우저가 애니메이션을 사용하면 다시 그리기 때문에 느려짐1234567891011121314151617181920212223242526@keyframes textAni{ 0%{ font-size: 12px; color: rgba(0, 0, 0, 0); transform: translate(0, 0); } 100%{ font-size: 24px; color: rgba(0, 0, 0, 1); transform: translate(400px, 75px); }}.visual{ height: 120px; position: relative;}/* 텍스트 에니메이션 */.visual-text{ /* position: absolute; */ display: inline-block; background: yellow; animation-name: textAni; animation-duration: 2000ms; animation-fill-mode: forwards;}&gt; 다시 그리지 않아서 속도가 더 빠름 1234567891011121314.visual::before, .visual::after{ content:\"\"; position: absolute; width: 100%; height: 100%; top: 0; left: 0; background-repeat: no-repeat;}.visual::before{ background-image: url(\"./images/ani_flower_01.png\"), url(\"./images/ani_flower_02.png\"); background-position: 0 -10px, 670px 0; }&gt; background: url(“./images/ani_flower_01.png”); 를 사용하면 repeat가 위에서 선언되어 아래에서 풀림, 대표가 아닌 background-image 사용으로 해결.visual::before, .visual::after{ 와 .visual::before{ 위치를 변경해도 가능","link":"/2019/04/04/fc-190404/"},{"title":"2019-04-01 TIL","text":"flex main에 display를 flex로 설정 flex-direction을 이용하여 가로로 정렬 justify-content를 이용하여 group1~3의 사이를 균등하게 분할 IE11에서 이용 불가 https://css-tricks.com/snippets/css/a-guide-to-flexbox/ float IE11에서 flex의 사용이 불가하여 IE11 호환이 필요한 경우 사용가능 group에 float 속성을 주어 가로로 정렬 float 속성을 가진 group들이 공간을 차지하지 않아 아래 main 아래의 element들이 위로 당겨짐 이를 해결하기 위하여 ::after를 이용하여 가상의 element를 만들어 clear 속성을 줌","link":"/2019/04/01/fc-190401/"},{"title":"2019-04-08 TIL","text":"시멘틱 마크업 `article.term h2.term-head div.term-body h3.term-title img.term-img span.term-content section.term h2.section-heading{웹 관련 용어} dl.term_list div dt.term-list-subject a dl.term-list-thumbnail img dd.term-list-brief text ` img&lt;img src=\"경로\" alt&gt; &lt;img src=\"경로\" alt=\"설명\"&gt; 대체 text가 없으면 장식으로 인식(위) inline base line 기준으로 아래 2px 정도의 descender발생 input 1:1 label 필요, title=””을 이용하여 암묵적 label가능 ie 버전에 따라 main 및 기타 html5 추가 태그를 지원하지 않음 html5 shiv","link":"/2019/04/08/fc-190408/"},{"title":"2019-04-05 TIL","text":"form 상호작용필수 요소로 action을 가짐(주소) fieldset : 연관성 있는 서식의 묶음 legend : fieldset의 목적 label : 입력서식에 대한 표시, 모든 입력서식은 label을 가져야 함 암묵적 label : label 안에 input을 넣는 방법 명시적 label ; label에 for를 이용하여 input의 id를 입력 required 논리속성 submit의 action으로 데이터 전송 전 browser에서 필수값을 확인 placeholder 안에 들어올 값 이나 값의 힌트를 미리 입력 / label과 동일하게 많이 사용하나 다름 inputtype https://seulbinim.github.io/WSA/form.html#input-%EC%9A%94%EC%86%8C https://miketaylr.com/pres/html5/forms2.html #text-indent 들여쓰기block에서만 가능음수값이면 내여쓰기 letter-spacing: 자간조절","link":"/2019/04/05/fc-190405/"},{"title":"2019-04-12 TIL","text":"인기 사이트 마크업 내 마크업12345678section.favorite h2.favorite-heading ol.favorite-list li a strong a.favorite-more&gt; 강사님 마크업12345678section.favorite h2.favorite=heading ol li.no1 a em.up, em.down, em.stop favorite-more&gt; 인용구 인용구 tag 123&lt;q&gt;&lt;/q&gt;&lt;blockquote&gt;&lt;/blockquote&gt;&gt; 마크업 12345article.web-cafe h2 p footer&gt; article에 footer를 숨김영역으로 하여 내용을 복사 할 때 같이 복사가 됨 html 12345678910&lt;article class=\"slogan\"&gt; &lt;h2 class=\"slogan-heading\" title=\"웹카페에서 웹표준을\"&gt;슬로건&lt;/h2&gt; &lt;p class=\"slogan-content\"&gt; &lt;q site=\"http://w3.org\"&gt;The power of the Web is in its universality, Access by everyone regardless of disability is an essential aspect.\" Tim Berners - Lee , W3C Director and inventor of the World Wide Web&lt;/q&gt; &lt;footer class=\"readable-hidden\"&gt; 출처 : Worl Wide Web Consortium &lt;/footer&gt; &lt;/p&gt;&lt;/article&gt;&gt; 1234567891011121314151617181920212223242526272829303132.slogan{ position: relative; padding:10px 70px 10px 180px;}.slogan-heading{ width: 110px; height: 83px; line-height: 83px; text-align: center; position: absolute; left: 35px; bottom: -35px;} .slogan-heading::after{ content: \"\"; width: 100%; height: 100%; position: absolute; top: 0; left: 0; background: url(\"./images/coffee.png\") no-repeat;}.slogan-content{ color: #a09784;}.slogan-content q::before{ content: '\"'; font-size: 3rem; position: relative; top:10px;}&gt;","link":"/2019/04/12/fc-190412/"},{"title":"2019-04-15 TIL","text":"footerimg 마크업 내 마크업123456789101112131415div.footer-bg footer.footer a img ul.footer-menu li div.copyright p a p div.badge img.badge-html img.badge-css &gt; 강사님 마크업12345678910111213141516.footer a.footer-logo img ul.guide li a address.address span span span a small.copyright div.badge img img&gt; address 주소, 연락처에 사용본문에서는 사용하지 않음 small &amp; big small : 주변 보다 작게big : 주변 보다 크게 copyright &amp;copy\\; 로 입력 반응형padding padding 은 width의 값을 기준으로 동작width가 100% 일 때 padding-top을 75%로 하면 4:3이 됨","link":"/2019/04/15/fc-190415/"},{"title":"2019-04-11 TIL","text":"새소식 마크업 내 마크업1234567891011section.news h2.news-header a.news-link article.news-item h3.news-item-subject time p.news-item-brief span img a.news-more&gt; 강사님 마크업 1234567891011section.news h2.news-heading article.news-item h3.news-item-subject time.news-item-date p.news-item-brief figure.news-item-thumbnail img figcaption a.news-more&gt; figure caption을 달기 위한 마크업적절한 예 부적절한 예 html 123456789101112131415161718&lt;section class=\"news clearfix\"&gt; &lt;h2 class=\"news-heading\"&gt;새소식&lt;/h2&gt; &lt;article class=\"news-item clearfix\"&gt; &lt;a href=\"#\"&gt; &lt;h3 class=\"news-item-subject\"&gt;W3C 사이트가 리뉴얼 되었습니다.&lt;/h3&gt; &lt;time class=\"news-item-date\" datetime=\"2019-04-11T11:19:37\"&gt;2019.04.11&lt;/time&gt; &lt;p class=\"news-item-brief\"&gt;디자인 및 다양한 view 환경을 고려하여 구성되어 있으며, 기존보다 최신 정보 및 개발자를 위한 기술 가이드도 찾기 쉽도록 구성되어 있습니다. &lt;/p&gt; &lt;figure class=\"news-item-thumbnail\"&gt; &lt;img src=\"./images/news.gif\" alt=\"\"&gt; &lt;figcaption&gt;W3C 리뉴얼&lt;/figcaption&gt; &lt;/figure&gt; &lt;/a&gt; &lt;/article&gt; &lt;a href=\"#\" class=\"news-more icon-plus\" title=\"새소식\" target=\"_blank\"&gt;더보기&lt;/a&gt;&lt;/section&gt;&gt; css 내 css12345678910111213141516171819202122232425262728293031323334353637383940414243444546/* news */.news{ position: relative; }.news-heading{ padding: 15px 0; color: #e25d2d; font-weight: 700;}.news-item{ position: relative; margin: 35px 0;}.news-item-subject{ float: right; width: 245px; font-weight: 700;}.news-item-date{ float: right; width: 245px; margin-bottom: 10px;}.news-item-brief{ float: right; width: 245px;}.news-item-thumbnail{ float: left; position: absolute; top: 0; text-align: center;}.news-item-thumbnail&gt;figcaption{ margin-top: 10px;}.news&gt;a{ position: absolute; right: 0; top: 15px;}.news&gt;a::before{ color: darkgreen;}&gt; 강사님 css12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455.news{ margin-top: 20px; position: relative;}.news::before{ content: \"\"; position: absolute; top: 35px; left: 0; width: 80%; height: 1px; background: #aaa linear-gradient(to right, #aaa, #fff);}.news-heading{ font-size: 1.5rem; font-weight: 700; color:#e25d2d; }.news-item{ margin-top: 35px; position: relative;}.news-item a{ display: block; padding-left: 130px; }.news-item-subject{ font-size: 1.5rem;}.news-item-brief{ margin-top: 10px; line-height: 1.5;}.news-item-thumbnail{ position: absolute; top: 3px; left: 0; text-align: center; }.news-item-thumbnail img{ margin-bottom: 15px; box-shadow: 0 10px 15px 5px #aaa ;}.news-more{ position: absolute; padding: 8px; top: -8px; right: -8px;;}.news-more::before{ color: hsla(110, 90%, 30%, 1);}&gt; a tag에 여러 요소가 있을 때 a tag를 block으로 하면 선택 촛점 영역이 반듯해짐 이벤트 &amp; 사이트 마크업 내 마크업123456789101112131415161718div section.event h2.event-heading span div.event-content p img.event-thumbnail p.event-brief div.event-buttons button.event-pre button.event-next section.relation h2.relation-heading span ul.relation-site-list li.relation-site-item a.relation-site-item-text&gt; htmlIR 12345678910111213141516171819202122232425262728&lt;!DOCTYPE html&gt;&lt;html lang=\"ko_KR\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;IR 기법 및 Sprite 이미지의 활용&lt;/title&gt; &lt;style&gt; .btn-wrapper{ background: yellow; margin: 50px; } .btn-wrapper span{ background: pink; display: inline-block; width: 20px; height: 0; padding-top: 20px; overflow: hidden; } &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=\"btn-wrapper\"&gt; &lt;span class=\"btn-prev\"&gt;이전&lt;/span&gt; &lt;span class=\"btn-prev\"&gt;이전&lt;/span&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&gt; 123456789101112.btn-wrapper span{ background: pink url(\"./css/images/backpage_forwardpage.png\"); display: inline-block; width: 20px; height: 0; padding-top: 20px; overflow: hidden; } .btn-wrapper .btn-next{ background-position: -40px 0; }&gt; 1234567891011121314.btn-wrapper span{ background-color: pink; background-image: url(\"./css/images/backpage_forwardpage.png\"); background-repeat: repeat; display: inline-block; width: 20px; height: 0; padding-top: 20px; overflow: hidden; } .btn-next{ background-position: -40px 0; }&gt; 위 css는 .btn-wrapper span의 background를 대표속성을 사용하여 background-position이 자동으로 지정됨.btn-next의 선택자 우선순위가 더 낮아서 .btn-wrapper .btn-next로 선택해야 지정이 됨아래 css는 대표속성을 사용하지 않아 .btn-next로 선택해도 동작 https://windtale.net/blog/css-image-sprite-automation-with-grunt-spritesmith/","link":"/2019/04/11/fc-190411/"},{"title":"2019-04-16 TIL","text":"picture &lt;picture&gt; 내에 &lt;img&gt;를 사용하는 것은 필수 123456&lt;div class=\"rwd-wrapper\"&gt; &lt;picture&gt; &lt;source srcset=\"images/image-1x.png 1x, images/image-2x.png 2x\"&gt; &lt;/picture&gt;&lt;/div&gt;&gt; 1234567&lt;div class=\"rwd-wrapper\"&gt; &lt;picture&gt; &lt;source srcset=\"images/image-1x.png 1x, images/image-2x.png 2x\"&gt; &lt;img src=\"images/image-src.png\"&gt; &lt;/picture&gt;&lt;/div&gt;&gt;","link":"/2019/04/16/fc-190416/"},{"title":"2019-04-09 TIL","text":"time datetime 필요time[datetime=”2019-04-09T11:18:27”] aria 이용한 title 123456789101112131415161718192021222324252627&lt;section class=\"notice board-act\"&gt; &lt;h2 class=\"tab notice-heading\" tabindex=\"0\"&gt;공지사항&lt;/h2&gt; &lt;ul class=\"board-list notice-list\"&gt; &lt;li class=\"icon-dot-circled\"&gt; &lt;a href=\"#\"&gt;&lt;/a&gt; &lt;time datetime=\"2019-04-09T11:18:27\"&gt;2019.04.09&lt;/time&gt; &lt;/li&gt; &lt;li class=\"icon-dot-circled\"&gt; &lt;a href=\"#\"&gt;&lt;/a&gt; &lt;time datetime=\"2019-04-09T11:18:27\"&gt;2019.04.09&lt;/time&gt; &lt;/li&gt; &lt;li class=\"icon-dot-circled\"&gt; &lt;a href=\"#\"&gt;&lt;/a&gt; &lt;time datetime=\"2019-04-09T11:18:27\"&gt;2019.04.09&lt;/time&gt; &lt;/li&gt; &lt;li class=\"icon-dot-circled\"&gt; &lt;a href=\"#\"&gt;&lt;/a&gt; &lt;time datetime=\"2019-04-09T11:18:27\"&gt;2019.04.09&lt;/time&gt; &lt;/li&gt; &lt;li class=\"icon-dot-circled\"&gt; &lt;a href=\"#\"&gt;&lt;/a&gt; &lt;time datetime=\"2019-04-09T11:18:27\"&gt;2019.04.09&lt;/time&gt; &lt;/li&gt; &lt;/ul&gt; &lt;a href=\"#\" class=\"icon-plus board-more notice-more\" title=\"공지사항\" &gt;더보기&lt;/a&gt;&lt;/section&gt;&gt; 123456789101112131415161718192021222324252627&lt;section class=\"notice board-act\"&gt; &lt;h2 id=\"notice\" class=\"tab notice-heading\" tabindex=\"0\"&gt;공지사항&lt;/h2&gt; &lt;ul class=\"board-list notice-list\"&gt; &lt;li class=\"icon-dot-circled\"&gt; &lt;a href=\"#\"&gt;&lt;/a&gt; &lt;time datetime=\"2019-04-09T11:18:27\"&gt;2019.04.09&lt;/time&gt; &lt;/li&gt; &lt;li class=\"icon-dot-circled\"&gt; &lt;a href=\"#\"&gt;&lt;/a&gt; &lt;time datetime=\"2019-04-09T11:18:27\"&gt;2019.04.09&lt;/time&gt; &lt;/li&gt; &lt;li class=\"icon-dot-circled\"&gt; &lt;a href=\"#\"&gt;&lt;/a&gt; &lt;time datetime=\"2019-04-09T11:18:27\"&gt;2019.04.09&lt;/time&gt; &lt;/li&gt; &lt;li class=\"icon-dot-circled\"&gt; &lt;a href=\"#\"&gt;&lt;/a&gt; &lt;time datetime=\"2019-04-09T11:18:27\"&gt;2019.04.09&lt;/time&gt; &lt;/li&gt; &lt;li class=\"icon-dot-circled\"&gt; &lt;a href=\"#\"&gt;&lt;/a&gt; &lt;time datetime=\"2019-04-09T11:18:27\"&gt;2019.04.09&lt;/time&gt; &lt;/li&gt; &lt;/ul&gt; &lt;a href=\"#\" class=\"icon-plus board-more notice-more\" title=\"공지사항\" aria-labelledby=\"notice\"&gt;더보기&lt;/a&gt;&lt;/section&gt;&gt; javascritp defer defer 속성은 HTML 구문 분석이 완전히 완료되면 스크립트 파일을 실행하도록 브라우저에 지시","link":"/2019/04/09/fc-190409/"},{"title":"to-do list","text":"to-do list 3주차 과제javascript, jquery, bootstrap을 이용한 todo listlocalstorage를 이용한 save &amp; load Live Demo https://hicucu.github.io/javascript-basic/todo_v2_with_storage.html","link":"/2019/03/19/to-do-list/"},{"title":"shopping_spree","text":"web-basic-project 총 제작 기간 5일참여인원 : 3인 1일차 : 아이디어 및 컨셉 회의 2일차 : 기본 레이아웃 및 메인기능 구현 3일차 : 서브기능 정리 및 레이아웃 수정 4일차 : 서브기능 구현 및 디자인요소 추가 5일차 : 벨리데이션 잔고 어때? 각기다른 쇼핑몰 장바구니가 불편하다는 생각에서 출발했다.필요순으로 분류하고분류별로 한눈에 볼수있고간편하면 더 좋겠다고 생각하며지극히 주관적인 자신만의 위시리스트를 기획하게 되었다. 기본적인 기능은원하는 상품의 링크를 가져와 상품정보를 입력하면나에게 꼭 필요한 상품인지 4단계중 선택,추가하면그동안 추가된 상품들이 순차적으로 리스트업 된다.삭제와 수정이 가능하며,앞서 설정한 중요도별로 상품을 한눈에 모아서 볼수 있다. 만들면서 가장 중점을 둔 부분은 편리함이다.간단한 기능만큼 필요한때 쉽게 꺼내쓸수 있는 앱으로 만들고 싶었다.크롬브라우저의 extention 기능을 구현하여,웹사이트를 굳이 방문하지 않아도 되는 번거로움을 줄였다. Live Demo https://hicucu.github.io/web-basic-project/","link":"/2019/03/29/shopping-spree/"}],"tags":[{"name":"HTML-CSS","slug":"HTML-CSS","link":"/tags/HTML-CSS/"},{"name":"study","slug":"study","link":"/tags/study/"},{"name":"JQuery","slug":"JQuery","link":"/tags/JQuery/"},{"name":"Bootstrap","slug":"Bootstrap","link":"/tags/Bootstrap/"},{"name":"Error","slug":"Error","link":"/tags/Error/"},{"name":"TIL","slug":"TIL","link":"/tags/TIL/"},{"name":"codility","slug":"codility","link":"/tags/codility/"},{"name":"coding","slug":"coding","link":"/tags/coding/"},{"name":"web-basic","slug":"web-basic","link":"/tags/web-basic/"},{"name":"homework","slug":"homework","link":"/tags/homework/"},{"name":"project","slug":"project","link":"/tags/project/"}],"categories":[{"name":"Study","slug":"Study","link":"/categories/Study/"},{"name":"fast campus","slug":"fast-campus","link":"/categories/fast-campus/"},{"name":"HTML-CSS","slug":"Study/HTML-CSS","link":"/categories/Study/HTML-CSS/"},{"name":"codility","slug":"codility","link":"/categories/codility/"},{"name":"Front-end","slug":"Study/Front-end","link":"/categories/Study/Front-end/"},{"name":"HTML-CSS","slug":"fast-campus/HTML-CSS","link":"/categories/fast-campus/HTML-CSS/"},{"name":"web-basic","slug":"fast-campus/web-basic","link":"/categories/fast-campus/web-basic/"}]}